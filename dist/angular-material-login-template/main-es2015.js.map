{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/log-in/log-in.component.ts","./src/app/components/log-in/log-in.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/team/team.component.ts","./src/app/components/team/team.component.html","./src/app/constants/REST_API.ts","./src/app/helpers/auth-guard.ts","./src/app/helpers/error-interceptors.ts","./src/app/helpers/jwt.interceptor.ts","./src/app/services/AppService.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { TeamComponent } from './components/team/team.component';\r\nimport { LogoutComponent } from './components/logout/logout.component';\r\n\r\nimport { AuthGuard } from './helpers/auth-guard'\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n  { path: 'login', component: LogInComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n  { path: 'about', component: AboutComponent, canActivate: [AuthGuard] },\r\n  { path: 'team', component: TeamComponent, canActivate: [AuthGuard] },\r\n  { path: 'logout', component: LogoutComponent, canActivate: [AuthGuard] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","import { Component, OnChanges, OnInit, SimpleChange } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n\r\n}\r\n","<div class=\"layout\">\r\n\r\n\r\n    <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n/* Components */\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { TeamComponent } from './components/team/team.component';\r\n\r\nimport { AppService } from './services/AppService';\r\nimport { REST_API } from './constants/REST_API'\r\nimport { LogoutComponent } from './components/logout/logout.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\r\nimport { ErrorInterceptor } from './helpers/error-interceptors';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterComponent,\r\n    LogInComponent,\r\n    DashboardComponent,\r\n    AboutComponent,\r\n    TeamComponent,\r\n    LogoutComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [ \r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    AppService, REST_API,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { REST_API } from '../../constants/REST_API';\r\nimport { AppService } from '../../services/AppService';\r\n\r\n@Component({\r\n  selector: 'about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n  serverErrorMessage: string = '';\r\n  aboutData: any;\r\n  constructor(\r\n    public appService: AppService,\r\n    public api: REST_API,\r\n    public router: Router) { }\r\n  ngOnInit() {\r\n    this.getAboutDetails();\r\n  }\r\n  getAboutDetails() {\r\n    this.appService.retreiveUserDashBoardDetails(this.api.dashboard.retreiveUserDashBoardDetails).subscribe(res => {\r\n      this.aboutData = res.dashboard;\r\n    }, (err) => {\r\n      console.log('Error', err);\r\n      this.serverErrorMessage = err;\r\n    })\r\n  }\r\n}\r\n\r\n","<header></header>\r\n<div class=\"container-fluid\">\r\n    <h3 *ngIf=\"aboutData && aboutData.length == 0\">Please add a description in the dashboard to see the About section</h3>\r\n    <div *ngIf=\"aboutData && aboutData.length > 0\">\r\n        <div class=\"description\" *ngFor=\"let d of aboutData\">\r\n                {{d.description}}\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { REST_API } from '../../constants/REST_API';\r\nimport { AppService } from '../../services/AppService';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent {\r\n  totalAmount: number =  0\r\n  dasboardSuccess: string = '';\r\n  serverErrorMessage: string = '';\r\n  dashboardData: any;\r\n  user: any;\r\n  constructor(\r\n    public appService: AppService,\r\n    public api: REST_API,\r\n    public router: Router) { }\r\n  dashboardFormFields = { description: '', amount: '', teammember: '', role: '' };\r\n  dashboardForm: FormGroup;\r\n\r\n  ngOnInit(): void {\r\n    this.dashboardForm = new FormGroup(\r\n      {\r\n       \r\n        'description': new FormControl(this.dashboardFormFields.description, [\r\n          Validators.required, Validators.min(100), Validators.max(100)\r\n        ]),\r\n        'amount': new FormControl(this.dashboardFormFields.amount, [\r\n          Validators.required\r\n        ]),\r\n        'teammember': new FormControl(this.dashboardFormFields.teammember, [\r\n          Validators.required\r\n        ]),\r\n        'role': new FormControl(this.dashboardFormFields.role, [\r\n          Validators.required\r\n        ])\r\n      }\r\n\r\n    );\r\n\r\n    this.retreiveUserDashBoardDetails();\r\n  }\r\n  get description() { return this.dashboardForm.get('description'); }\r\n  get amount() { return this.dashboardForm.get('amount'); }\r\n  get teammember() { return this.dashboardForm.get('teammember'); }\r\n  get role() { return this.dashboardForm.get('role'); }\r\n\r\n  retreiveUserDashBoardDetails() {\r\n    this.appService.retreiveUserDashBoardDetails(this.api.dashboard.retreiveUserDashBoardDetails).subscribe(res => {\r\n      this.dasboardSuccess = res.message;\r\n      this.dashboardData = res.dashboard;\r\n      this.user = res.user;\r\n      this.totalAmount = 0;\r\n     this.dashboardData.forEach(element => {\r\n       this.totalAmount += parseInt(element.amount);\r\n      });\r\n    }, (err) => {\r\n      console.log('Error', err);\r\n      this.serverErrorMessage = err;\r\n    })\r\n  }\r\n  createdashBoard() {\r\n    let userDashboardDetails: any = this.dashboardForm.value;\r\n    this.appService.createDashboard(this.api.dashboard.createDashboard, userDashboardDetails)\r\n      .pipe(first())\r\n      .subscribe(res => {\r\n        this.dasboardSuccess = res.message;\r\n        this.retreiveUserDashBoardDetails();\r\n        this.dashboardForm.reset();\r\n      }, (err) => {\r\n        console.log('Error', err);\r\n        this.serverErrorMessage = err;\r\n      });\r\n  }\r\n\r\n}","<header></header>\r\n<div class=\"container-fluid\">\r\n    <div>\r\n        <p *ngIf=\"user\" class=\"welcome-user\">Welcome {{user.username}} !</p>\r\n        <p *ngIf=\"user\" class=\"lastlogin\">Last login: {{user.lastlogin | date}}</p>\r\n        <p class=\"balance\">Account Balance: Rs. {{totalAmount}}</p>\r\n        <div *ngIf=\"serverErrorMessage\" class=\"isError\">{{serverErrorMessage}}</div>\r\n        <!-- <div *ngIf=\"dasboardSuccess\" class=\"isSuccess\">{{dasboardSuccess}}</div> -->\r\n        <table *ngIf=\"dashboardData && dashboardData.length > 0\">\r\n            <thead>\r\n                <th>Date</th>\r\n                <th>Description</th>\r\n                <th>Amount</th>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let d of dashboardData\">\r\n                    <td>{{d.updatedAt | date}}</td>\r\n                    <td>{{d.description}}</td>\r\n                    <td>{{d.amount}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <p class=\"welcome-user\">Add a new dashboard:</p>\r\n\r\n        <form [formGroup]=\"dashboardForm\" #formReg=\"ngForm\">\r\n        \r\n            <div class=\"form-group\">\r\n                <label for=\"description\">Description</label>\r\n                <textarea  rows=\"2\"  maxlength=\"100\" minlength=\"100\" id=\"description\" class=\"form-control\" formControlName=\"description\" required></textarea>\r\n                <div *ngIf=\"description.invalid && (description.dirty || description.touched)\"\r\n                    class=\"alert alert-danger\">\r\n                    <div *ngIf=\"description.errors.required\">\r\n                        Field is required.\r\n                    </div>\r\n                    <div *ngIf=\"description.errors.minlength\">\r\n                        Must be at least 100 characters long.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"amount\">Amount</label>\r\n                <input type=\"number\" id=\"amount\" class=\"form-control\" formControlName=\"amount\" required>\r\n                <div *ngIf=\"amount.invalid && (amount.dirty || amount.touched)\" class=\"alert alert-danger\">\r\n                    <div *ngIf=\"amount.errors.required\">\r\n                        Field is required.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"teammember\">Add a team member</label>\r\n                <input id=\"teammember\" class=\"form-control\" formControlName=\"teammember\" required>\r\n                <div *ngIf=\"teammember.invalid && (teammember.dirty || teammember.touched)\" class=\"alert alert-danger\">\r\n                    <div *ngIf=\"teammember.errors.required\">\r\n                        Field is required.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"role\">Assign Role</label>\r\n                <select id=\"role\" class=\"form-control\" formControlName=\"role\" required>\r\n                    <option value=\"Admin\">Admin</option>\r\n                    <option value=\"Manager\">Manager</option>\r\n                    <option value=\"Developer\">Developer</option>\r\n                    <option value=\"Tester\">Tester</option>\r\n                </select>\r\n                <div *ngIf=\"role.invalid && (role.dirty || role.touched)\" class=\"alert alert-danger\">\r\n                    <div *ngIf=\"role.errors.required\">\r\n                        Field is required.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <button type=\"submit\" class=\"btn btn-default\" [disabled]=\"dashboardForm.invalid\"\r\n                (click)=\"createdashBoard()\">Create Dashboard</button>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AppService } from 'src/app/services/AppService';\r\n\r\n\r\n@Component({\r\n    selector: 'header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n    constructor(public router: Router, public appService: AppService) { }\r\n\r\n    ngOnInit(){\r\n    }\r\n    logout() {\r\n        this.appService.logout();\r\n        this.appService.setRegisteredUserObs(false);\r\n        this.router.navigate(['/login'])\r\n    }\r\n}","\r\n<nav>\r\n    <a routerLink=\"/dashboard\" routerLinkActive=\"active\">Dashboard</a>\r\n    <a routerLink=\"/about\" routerLinkActive=\"active\">About</a>\r\n    <a routerLink=\"/team\" routerLinkActive=\"active\">Team</a>\r\n    <a routerLink=\"/logout\" routerLinkActive=\"active\" (click)=\"logout()\">Logout</a>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AppService } from '../../services/AppService';\r\nimport { REST_API } from '../../constants/REST_API';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css']\r\n})\r\nexport class LogInComponent implements OnInit {\r\n  pageTitle: string = 'Login'\r\n  loginFormFields = { username: '', password: '' };\r\n  isRegistered: boolean = false;\r\n  loginForm: FormGroup;\r\n  serverErrorMessage: string = '';\r\n  constructor(\r\n    public appService: AppService,\r\n    public api: REST_API,\r\n    public router: Router) { }\r\n  ngOnInit(): void {\r\n    this.appService.getRegisteredUserObs().subscribe(res => {\r\n      this.isRegistered = res;\r\n    })\r\n\r\n    this.loginForm = new FormGroup({\r\n      'username': new FormControl(this.loginFormFields.username, [\r\n        Validators.required\r\n      ]),\r\n      'password': new FormControl(this.loginFormFields.password, [\r\n        Validators.required, Validators.minLength(8)\r\n      ])\r\n    });\r\n  }\r\n\r\n  get username() { return this.loginForm.get('username'); }\r\n\r\n  get password() { return this.loginForm.get('password'); }\r\n\r\n  login(evt: Event) {\r\n    let userLoginDetails: any = this.loginForm.value;\r\n\r\n    this.appService.login(this.api.authAPIs.login, userLoginDetails)\r\n      .pipe(first())\r\n      .subscribe(res => {\r\n        if (res.userId && res.token) {\r\n          this.router.navigate(['/dashboard']);\r\n        }\r\n      }, (err) => {\r\n        console.log('Error', err);\r\n        this.serverErrorMessage = err;\r\n      });\r\n  }\r\n\r\n  register() {\r\n    this.router.navigate(['register']);\r\n  }\r\n}","<div class=\"container-fluid layout\">\r\n\r\n  <h3>{{pageTitle}}</h3>\r\n<div *ngIf=\"isRegistered\" class=\"isSuccess\">Registration Done!</div>\r\n<div *ngIf=\"serverErrorMessage\" class=\"isError\">{{serverErrorMessage}}</div>\r\n  <form [formGroup]=\"loginForm\" #formDir=\"ngForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">User ID</label>\r\n        <input id=\"username\" type=\"email\" ngModel email class=\"form-control\" formControlName=\"username\" required>\r\n        <div *ngIf=\"username.invalid && (username.dirty || username.touched)\" class=\"alert alert-danger\">\r\n          <div *ngIf=\"username.errors.required\">\r\n            User ID is required.\r\n          </div>\r\n            <div *ngIf=\"!username.errors.required && username.invalid\">\r\n              Invalid User ID\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input id=\"password\" type=\"password\" class=\"form-control\" formControlName=\"password\" required>\r\n        <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger\">\r\n          <div *ngIf=\"password.errors.required\">\r\n            Password is required.\r\n          </div>\r\n          <div *ngIf=\"password.errors.minlength\">\r\n            Must be at least 8 characters long.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"login-btn\">\r\n      <button type=\"submit\" class=\"btn btn-default\" [disabled]=\"loginForm.invalid\" (click)=\"login($event)\">Login</button>\r\n      <button class=\"btn btn-default\" (click)=\"register()\">Register</button>\r\n      </div>\r\n  </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AppService } from '../../services/AppService';\r\n\r\n@Component({\r\n    selector: 'logout',\r\n    template: `Logout`\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n    pageTitle: string = 'Log Out'\r\n    constructor(\r\n        public appService: AppService,\r\n        public router: Router) { }\r\n    ngOnInit(): void {\r\n        this.appService.logout();\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AppService } from '../../services/AppService';\r\nimport { REST_API } from '../../constants/REST_API';\r\n\r\n@Component({\r\n  selector: 'register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  serverErrorMessage: string = '';\r\n  constructor(\r\n    public appService: AppService,\r\n    public api: REST_API,\r\n    public router: Router) { }\r\n  pageTitle: string = 'Sign Up'\r\n  registerFormFields = { username: '', email: '', password: '', confirmPassword: '' };\r\n  confPwd: boolean = false;\r\n  registerForm: FormGroup;\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = new FormGroup(\r\n      {\r\n        'username': new FormControl(this.registerFormFields.username, [\r\n          Validators.required\r\n        ]),\r\n        'email': new FormControl(this.registerFormFields.email, [\r\n          Validators.required\r\n        ]),\r\n        'password': new FormControl(this.registerFormFields.password, [\r\n          Validators.required, Validators.minLength(8)\r\n        ]),\r\n        'confirmPassword': new FormControl(this.registerFormFields.confirmPassword, [\r\n          Validators.required,\r\n\r\n        ])\r\n      }\r\n\r\n    );\r\n\r\n\r\n  }\r\n  get username() { return this.registerForm.get('username'); }\r\n  get password() { return this.registerForm.get('password'); }\r\n  get email() { return this.registerForm.get('email'); }\r\n  get confirmPassword() {\r\n    if (this.registerForm.get('password').value !== this.registerForm.get('confirmPassword').value) {\r\n      this.registerForm.get('confirmPassword').setErrors({ 'incorrect': true })\r\n    } else {\r\n      this.registerForm.get('confirmPassword').setErrors(null);\r\n    }\r\n\r\n    return this.registerForm.get('confirmPassword');\r\n  }\r\n\r\n  registerUser(evt: Event) {\r\n    let userRegistrationDetails: any = this.registerForm.value;\r\n    this.appService.register(this.api.authAPIs.register, userRegistrationDetails)\r\n      .pipe(first())\r\n      .subscribe(res => {\r\n        if (res.userId) {\r\n          this.router.navigate(['/login']);\r\n          this.appService.setRegisteredUserObs(true);\r\n        }\r\n\r\n      }, (err) => {\r\n        console.log('Error', err);\r\n        this.serverErrorMessage = err;\r\n      });\r\n  }\r\n\r\n  signIn(){\r\n  this.router.navigate(['login']);\r\n  }\r\n}","<div class=\"container-fluid layout\">\r\n  <h3>{{pageTitle}}</h3>\r\n<div *ngIf=\"serverErrorMessage\" class=\"isError\">{{serverErrorMessage}}</div>\r\n  \r\n  <form [formGroup]=\"registerForm\" #formReg=\"ngForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Name</label>\r\n        <input id=\"username\" class=\"form-control\" formControlName=\"username\" required>\r\n        <div *ngIf=\"username.invalid && (username.dirty || username.touched)\" class=\"alert alert-danger\">\r\n          <div *ngIf=\"username.errors.required\">\r\n            Name is required.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input id=\"email\" type=\"email\" ngModel email class=\"form-control\" formControlName=\"email\" required>\r\n        <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger\">\r\n          <div *ngIf=\"email.errors.required\">\r\n            Email is required.\r\n          </div>\r\n          <div *ngIf=\"!email.errors.required && email.invalid\">\r\n            Invalid Email\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input id=\"password\" type=\"password\" class=\"form-control\" formControlName=\"password\" required>\r\n        <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger\">\r\n          <div *ngIf=\"password.errors.required\">\r\n            Password is required.\r\n          </div>\r\n          <div *ngIf=\"password.errors.minlength\">\r\n            Must be at least 8 characters long.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"confirmPassword\">Confirm Password</label>\r\n        <input id=\"confirmPassword\" type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\"  required>\r\n        <div *ngIf=\"confirmPassword && confirmPassword.errors && confirmPassword.errors.incorrect\" class=\"alert alert-danger\">\r\n          Passswords don't match.\r\n        </div>\r\n      </div>\r\n      <div class=\"login-btn\">\r\n      <button type=\"submit\" class=\"btn btn-default\" [disabled]=\"registerForm.invalid\" (click)=\"registerUser($event)\">Register</button>\r\n      <button class=\"btn btn-default\" (click)=\"signIn()\">Login</button>\r\n      </div>\r\n  </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { REST_API } from '../../constants/REST_API';\r\nimport { AppService } from '../../services/AppService';\r\n\r\n@Component({\r\n  selector: 'team',\r\n  templateUrl: './team.component.html',\r\n  styleUrls: ['./team.component.css']\r\n})\r\nexport class TeamComponent implements OnInit {\r\n  pageTitle: string = 'Meet the Team';\r\n  serverErrorMessage: string = '';\r\n  teamData: any;\r\n  constructor(\r\n    public appService: AppService,\r\n    public api: REST_API,\r\n    public router: Router) { }\r\n  ngOnInit() {\r\n    this.getTeamDetails();\r\n  }\r\n  getTeamDetails() {\r\n    this.appService.retreiveUserDashBoardDetails(this.api.dashboard.retreiveUserDashBoardDetails).subscribe(res => {\r\n      this.teamData = res.dashboard;\r\n    }, (err) => {\r\n      console.log('Error', err);\r\n      this.serverErrorMessage = err;\r\n    })\r\n  }\r\n}\r\n\r\n","<header></header>\r\n<div class=\"container-fluid\">\r\n  <h3 *ngIf=\"teamData && teamData.length > 0\">{{pageTitle}}</h3>\r\n  <h3 *ngIf=\"teamData && teamData.length == 0\">You have not added any team member</h3>\r\n    <table *ngIf=\"teamData && teamData.length > 0\">\r\n      <thead>\r\n        <th>Team Member</th>\r\n        <th>Role</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let d of teamData\">\r\n          <td>{{d.teammember}}</td>\r\n          <td>{{d.role}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n   \r\n</div>","export class REST_API {\r\n    server_URL: string = 'https://app-fullstack-aparna.herokuapp.com/';\r\n    authAPIs = {\r\n        register: this.server_URL + 'auth/register',\r\n        login: this.server_URL + 'auth/login'\r\n    }\r\n    dashboard = {\r\n        createDashboard: this.server_URL + 'dashboard/createYourDashboard',\r\n        retreiveUserDashBoardDetails: this.server_URL + 'dashboard/retreiveUserDashBoardDetails'\r\n    }\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    userData: any;\r\n    constructor(\r\n        private router: Router\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        let user = '';\r\n        if (localStorage.getItem('currentUser')) {\r\n            user = JSON.parse(localStorage.getItem('currentUser')).token;\r\n        }\r\n        if (user) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AppService } from '../services/AppService';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    userData: any;\r\n    constructor(private accountService: AppService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let jwt = '';\r\n        if (localStorage.getItem('currentUser')) {\r\n            jwt = JSON.parse(localStorage.getItem('currentUser')).token;\r\n        }\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].includes(err.status) && jwt) {\r\n                // auto logout if 401 or 403 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n            const error = err.error?.message || err.statusText;\r\n            console.log(err);\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    userData : any;\r\n    constructor() { }\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let jwt = '';\r\n        if (localStorage.getItem('currentUser')){\r\n             jwt = JSON.parse(localStorage.getItem('currentUser')).token;\r\n        }\r\n        if (!!jwt) {\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${jwt}`\r\n                }\r\n            });\r\n        }\r\n        return next.handle(req);\r\n    }\r\n\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n//app imports\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppService {\r\n    public  userRegistered: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n    public currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    getUserValue(){\r\n        return this.currentUserSubject.asObservable();\r\n    }\r\n    getRegisteredUserObs(){\r\n        return this.userRegistered.asObservable();\r\n    }\r\n\r\n    setRegisteredUserObs(isRegistered: boolean) {\r\n        this.userRegistered.next(isRegistered);\r\n    }\r\n    \r\n    login(URL: string, userDetails: any) {\r\n        return this.http.post<any>(URL,\r\n            {\r\n                email: userDetails.username,\r\n                password: userDetails.password\r\n            })\r\n            .pipe(map(user => {\r\n                if (user && user.token) {\r\n                    localStorage.setItem('currentUser', JSON.stringify(user));\r\n                    this.currentUserSubject.next(user);\r\n                }\r\n                return user;\r\n            }));\r\n    }\r\n    register(URL: string, userDetails: any): Observable<any> {\r\n        return this.http.put<any>(URL,\r\n            {\r\n                email: userDetails.email,\r\n                password: userDetails.password,\r\n                username: userDetails.username\r\n            })\r\n            .pipe(map(user => {\r\n                return user;\r\n            }));\r\n    }\r\n    createDashboard(URL: string, userDashboardDetails: any): Observable<any> {\r\n        return this.http.post<any>(URL,\r\n            {\r\n                description: userDashboardDetails.description,\r\n                amount: userDashboardDetails.amount,\r\n                teammember: userDashboardDetails.teammember,\r\n                role: userDashboardDetails.role\r\n            })\r\n            .pipe(map(dashboard => {\r\n                return dashboard;\r\n            }));\r\n    }\r\n    retreiveUserDashBoardDetails(URL: string): Observable<any> {\r\n        return this.http.get<any>(URL + '?userId=' + this.currentUserValue['userId'])\r\n            .pipe(map(dashboard => {\r\n                return dashboard;\r\n            }));\r\n    }\r\n    logout() {\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n        return;\r\n    }\r\n}","export const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:4200'\r\n};\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}